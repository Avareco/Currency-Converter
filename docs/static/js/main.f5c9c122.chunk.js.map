{"version":3,"sources":["components/Header.tsx","components/Converter.tsx","action-creators/fetchExchange.ts","App.tsx","index.js"],"names":["Header","еxchangeRates","findCurrency","currency","find","item","cc","className","rate","Converter","useState","amount1","setAmount1","amount2","setAmount2","currency1","setCurrency1","currency2","setCurrency2","formatNumber","number","Number","toFixed","findRate","onChange","e","onChangeAmount1Handler","target","value","type","name","currency1ChangeHandler","map","selected","onChangeAmount2Handler","currency2ChangeHandler","baseCurrency","rs030","txt","exchangedate","setExchangeRates","a","axios","get","response","data","filter","alert","App","useEffect","fetchExchangeRates","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5c9c122.chunk.js","sourcesContent":["import { FC } from \"react\";\r\nimport { IExchangeRate } from \"../types/types\";\r\ninterface IHeader {\r\n  еxchangeRates: IExchangeRate[];\r\n}\r\nexport const Header: FC<IHeader> = ({ еxchangeRates }) => {\r\n  const findCurrency = (currency: string): IExchangeRate | undefined => {\r\n    return еxchangeRates.find((item) => item.cc === currency);\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header-currency\">\r\n        <div className=\"header-currency__name\">{findCurrency(\"EUR\")?.cc}:</div>\r\n        <div>{findCurrency(\"EUR\")?.rate}</div>\r\n      </div>\r\n      <div className=\"header-currency\">\r\n        <div className=\"header-currency__name\">{findCurrency(\"USD\")?.cc}:</div>\r\n        <div>{findCurrency(\"USD\")?.rate}</div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import { FC, useState } from \"react\";\r\nimport { IExchangeRate } from \"../types/types\";\r\ninterface IHeader {\r\n  еxchangeRates: IExchangeRate[];\r\n}\r\nexport const Converter: FC<IHeader> = ({ еxchangeRates }) => {\r\n  const [amount1, setAmount1] = useState<number>(0);\r\n  const [amount2, setAmount2] = useState<number>(0);\r\n  const [currency1, setCurrency1] = useState<string>(\"UAH\");\r\n  const [currency2, setCurrency2] = useState<string>(\"USD\");\r\n\r\n  function formatNumber(number: number): number {\r\n    return Number(number.toFixed(4));\r\n  }\r\n\r\n  const findRate = (currency: string): number => {\r\n    return Number(еxchangeRates.find((item) => currency === item.cc)?.rate);\r\n  };\r\n\r\n  const onChangeAmount1Handler = (amount1: number) => {\r\n    setAmount2(\r\n      formatNumber((amount1 * findRate(currency1)) / findRate(currency2))\r\n    );\r\n    setAmount1(amount1);\r\n  };\r\n\r\n  const currency1ChangeHandler = (currency1: string) => {\r\n    setAmount2(\r\n      formatNumber((amount1 * findRate(currency1)) / findRate(currency2))\r\n    );\r\n    setCurrency1(currency1);\r\n  };\r\n\r\n  const onChangeAmount2Handler = (amount2: number) => {\r\n    setAmount1(\r\n      formatNumber((amount2 * findRate(currency2)) / findRate(currency1))\r\n    );\r\n    setAmount2(amount2);\r\n  };\r\n\r\n  const currency2ChangeHandler = (currency2: string) => {\r\n    setAmount1(\r\n      formatNumber((amount2 * findRate(currency2)) / findRate(currency1))\r\n    );\r\n    setCurrency2(currency2);\r\n  };\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <div className=\"converter\">\r\n        <div className=\"converter__currency\">\r\n          <input\r\n            className=\"converter__input\"\r\n            onChange={(e) => onChangeAmount1Handler(Number(e.target.value))}\r\n            type=\"number\"\r\n            name=\"amount1\"\r\n            value={amount1 === 0 ? \"\" : amount1}\r\n          />\r\n          <select\r\n            onChange={(e) => currency1ChangeHandler(e.target.value)}\r\n            name=\"currency1\"\r\n          >\r\n            {еxchangeRates.map((item) =>\r\n              item.cc === \"UAH\" ? (\r\n                <option selected key={item.cc} value={item.cc}>\r\n                  {item.cc}\r\n                </option>\r\n              ) : (\r\n                <option key={item.cc} value={item.cc}>\r\n                  {item.cc}\r\n                </option>\r\n              )\r\n            )}\r\n          </select>\r\n        </div>\r\n        <div className=\"converter__currency\">\r\n          <input\r\n            className=\"converter__input\"\r\n            type=\"number\"\r\n            onChange={(e) => onChangeAmount2Handler(Number(e.target.value))}\r\n            value={amount2 === 0 ? \"\" : amount2}\r\n            name=\"amount1\"\r\n          />\r\n          <select\r\n            onChange={(e) => currency2ChangeHandler(e.target.value)}\r\n            name=\"currency2\"\r\n          >\r\n            {еxchangeRates.map((item) => (\r\n              <option key={item.cc} value={item.cc}>\r\n                {item.cc}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\n\r\nimport { IExchangeRate } from \"../types/types\";\r\nconst baseCurrency: IExchangeRate = {\r\n  rs030: 1,\r\n  txt: \"Українська гривня\",\r\n  rate: 1,\r\n  cc: \"UAH\",\r\n  exchangedate: \"0\",\r\n};\r\nexport async function fetchExchangeRates(\r\n  setExchangeRates: Dispatch<SetStateAction<IExchangeRate[]>>\r\n) {\r\n  try {\r\n    const response = await axios.get<IExchangeRate[]>(\r\n      \"https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json\"\r\n    );\r\n    setExchangeRates([\r\n      ...response.data.filter((item) => item.cc === \"USD\" || item.cc === \"EUR\"),\r\n      baseCurrency,\r\n    ]);\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n}\r\n","import { useEffect, useState } from \"react\";\n\nimport { Header } from \"./components/Header\";\nimport { Converter } from \"./components/Converter\";\n\nimport { fetchExchangeRates } from \"./action-creators/fetchExchange\";\nimport { IExchangeRate } from \"./types/types\";\nimport \"./styles/styles.scss\";\n\n\nfunction App() {\n  const [еxchangeRates, setExchangeRates] = useState<IExchangeRate[]>([]);\n\n  useEffect(() => {\n    fetchExchangeRates(setExchangeRates);\n  }, []);\n \n \n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <Header еxchangeRates={еxchangeRates}/>\n        <Converter еxchangeRates={еxchangeRates}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}